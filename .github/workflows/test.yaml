name: "test"

on:
  pull_request:
    branches:
      - "master"
  push:
    branches:
      - "master"

jobs:
  update-hg-jdk:
    name: "Update mercurial JDK mirror"
    runs-on: "ubuntu-20.04"
    steps:
      - name: Downgrade git
        run: |
          # workaround for:
          # https://public-inbox.org/git/20200605224342.GF6569@camp.crustytoothpaste.net/t/
          git --version
          apt-cache policy git
          sudo apt-get install --allow-downgrades git=1:2.25.1-1ubuntu3 git-man=1:2.25.1-1ubuntu3
          git --version
      - uses: actions/checkout@v2
      - name: Checkout hg-jdk mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/hg-jdk
          path: hg-jdk
          fetch-depth: '0'
      - name: Setup hg mappings
        run: |
          set -eux
          . ./update-funcs.sh
          pushd "hg-jdk"
           mirror_init "hg-jdk"
          popd
          rm -rf hg-jdk/.git/hg/.hg
          find hg-jdk/.git/hg
      - name: Save original hashes
        env:
          HG_JDK_HASH: ${{ hashFiles('hg-jdk/.git/hg/marks*') }}
        run: |
          set -eux
          echo "HG_JDK_HASH=${HG_JDK_HASH}" >> $GITHUB_ENV
      - name: Cache hg repo
        uses: actions/cache@v2
        with:
          path: |
            hg-jdk/.git/hg/.hg
          key: hg-jdk-cache-${{ env.HG_JDK_HASH }}
          restore-keys: hg-jdk-cache
      - name: Update mirror
        run: |
          set -eux
          . ./update-funcs.sh
          setup_git_plugin
          update_jdk_mirror "jdk/jdk11" "jdk-updates/jdk11u" "jdk-updates/jdk11u-dev" "shenandoah/jdk11"
      - name: Changes
        if: ${{ hashFiles('hg-jdk/.git/hg/marks*') != env.HG_JDK_HASH }}
        run: |
          echo "Changes !!"

  test-variables:
    if: false
    name: "Test variables"
    runs-on: "ubuntu-20.04"
    steps:
      - name: Set env
        run: |
          echo "RUN_NEXT=1" >> $GITHUB_ENV
      - name: Conditional
        if: ${{ env.RUN_NEXT == '1' }}
        run: |
          echo $RUN_NEXT
          cat $GITHUB_ENV
      - name: Conditional 2
        if: ${{ env.RUN_NEXT != '1' }}
        run: |
          echo $RUN_NEXT
          cat $GITHUB_ENV
      - name: Fail
        run: |
          false
      - name: Conditional 3
        if: ${{ failure() && env.RUN_NEXT == '1' }}
        run: |
          echo $RUN_NEXT
          cat $GITHUB_ENV
      - name: Conditional 4
        if: ${{ failure() && env.RUN_NEXT != '1' }}
        run: |
          echo $RUN_NEXT
          cat $GITHUB_ENV
      - name: Conditional failure
        if: ${{ failure() }}
        run: |
          echo "failed"
      - name: Conditional always
        if: ${{ always() }}
        run: |
          echo "always"
      - name: Normal
        run: |
          echo "normal"

  test-auto:
    if: false
    name: "Test"
    runs-on: "ubuntu-20.04"

    steps:
      - name: Downgrade git
        run: |
          # workaround for:
          # https://public-inbox.org/git/20200605224342.GF6569@camp.crustytoothpaste.net/t/
          git --version
          apt-cache policy git
          sudo apt-get install --allow-downgrades git=1:2.25.1-1ubuntu3 git-man=1:2.25.1-1ubuntu3
          git --version
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: zzambers/test-autoupdated
          ssh-key: ${{ secrets.UPDATER_PRIV_KEY }}
          path: test-autoupdated
          fetch-depth: '0'
      - name: Run
        run: |
          # dummy comment
          set -eux
          free -h
          hg --version
          git --version
          apt-cache policy git
          echo "${PATH}"
          PATH="${PATH}:${HOME}/bin"
          echo "${PATH}"
          mkdir -p "${HOME}/bin"
          curl -f -L -o "${HOME}/bin/git-remote-hg" "https://raw.githubusercontent.com/mnauw/git-remote-hg/v1.0.0/git-remote-hg"
          chmod +x "${HOME}/bin/git-remote-hg"
          type git-remote-hg
          if ! curl -s -I "https://github.com/zzambers/test-autoupdater/releases/download/hg-files-latest/hg-forest-top.tar.xz" | head -n 1 | grep -q '404 Not Found' ; then
            curl -f -L -o "hg-forest-top.tar.xz" "https://github.com/zzambers/test-autoupdater/releases/download/hg-files-latest/hg-forest-top.tar.xz"
            tar -xJf hg-forest-top.tar.xz -C test-autoupdated/.git
          fi
          ls -la test-autoupdated/.git/hg
          #git branch
          #git remote --verbose show
          #echo "$( git rev-parse HEAD )" > commit_id
          pushd test-autoupdated
          git config user.name github-actions
          git config user.email github-actions@github.com
          git config remote-hg.track-branches false
          #git branch
          git fetch origin "refs/notes/hg:refs/notes/hg"
          #git fetch origin "jdk8u/jdk8u:jdk8u/jdk8u"
          #git fetch origin --tags
          #git remote --verbose show
          #cat ../commit_id >> generated
          #git add -A
          #git commit -m "generated by: $( cat ../commit_id )"
          #git push
          git fetch "hg::http://hg.openjdk.java.net/jdk8u/jdk8u" "master:jdk8u/jdk8u"
          #git push origin "jdk8u/jdk8u"
          #git push --tags
          #git push origin "refs/notes/hg:refs/notes/hg"
          git push origin --tags "jdk8u/jdk8u:jdk8u/jdk8u" "refs/notes/hg:refs/notes/hg"
          popd
          tar -cJf hg-forest-top.tar.xz -C test-autoupdated/.git --exclude hg/hg hg

      - uses: eine/tip@master
        with:
          tag: hg-files-latest
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            hg-forest-top.tar.xz

